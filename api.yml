swagger: '2.0'
info:
  version: 1.0.0
  title: Microservice for Boards
  description: Javascript + MongoDB
  license:
    name: Bryan Antonio Angarita Rodriguez
host: 192.168.99.101:3000
basePath: /
schemes:
  - http
consumes:
  - application/json
produces:
  - application/json
paths:
  /boards:
    post:
      summary: Creates a new board
      operationId: createBoard
      parameters:
        - name: board
          in: body
          required: true
          description: Board Object
          schema:
            $ref: '#/definitions/BoardInput'
      responses:
        '201':
          description: Created
          schema:
            $ref: '#/definitions/Board'
        '400':
          description: Bad Request
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'
    get:
      summary: Returns all boards
      operationId: getAllBoards
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/BoardsList'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: Internal Server Error
          schema:
            $ref: '#/definitions/ErrorModel'

  /boards/{id}:
    get:
      summary: Returns a board with the given code
      operationId: getBoardByCode
      parameters:
        - name: code
          in: path
          description: The code of the course to be returned
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Board'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    put:
      summary: Updates a course with the given code
      operationId: updateCourse
      parameters:
        - name: code
          in: path
          description: The code of the course to be updated
          required: true
          type: integer
        - name: course
          in: body
          required: true
          description: Course Object
          schema:
            $ref: '#/definitions/BoardInput'
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/Board'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

    delete:
      summary: Deletes a course with the given code
      operationId: deleteCourse
      parameters:
        - name: code
          in: path
          description: The code of the course to be deleted
          required: true
          type: integer
      responses:
        '200':
          description: Ok
          schema:
            $ref: '#/definitions/CourseCode'
        '404':
          description: Not Found
          schema:
            $ref: '#/definitions/ErrorModel'
        '406':
          description: Not Acceptable (Invalid Params)
          schema:
            $ref: '#/definitions/ErrorModel'
        '500':
          description: unexpected error
          schema:
            $ref: '#/definitions/ErrorModel'

definitions:

  # Boards
  Board:
    type: object
    properties:
      id:
        type: number
      owner_id:
        type: number
      team:
        type: array
        items: 
          type: number
      name:
        type: string
      archived:
        type: boolean
        default: false
      created_at:
        type: string
        default: "{{ TODAY() }}"
        format: date-time
      updated_at:
        type: string
        default: "{{ TODAY() }}"
        format: date-time


  BoardInput:
    type: object
    properties:
      name:
        type: string
      team:
        type: array
        items:
          type: number

  BoardsList:
    type: object
    required:
      - total
      - list
    properties:
      total:
        type: number
      list:
        type: array
        items:
          $ref: '#/definitions/Board'
  
  CourseCode:
    type: object
    properties:
      code:
        type: integer
        
# Errors
  ErrorModel:
    type: object
    required:
      - message
      - code
    properties:
      message:
        type: string
      code:
        type: number
      description:
        type: object

